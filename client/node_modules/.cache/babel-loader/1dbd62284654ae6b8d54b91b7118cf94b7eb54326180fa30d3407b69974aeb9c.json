{"ast":null,"code":"/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style ||\n  // is firebug? http://stackoverflow.com/a/398120/376773\n  window.console && (console.firebug || console.exception && console.table) ||\n  // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31;\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return args;\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    return exports.storage.debug;\n  } catch (e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (typeof process !== 'undefined' && 'env' in process) {\n    return process.env.DEBUG;\n  }\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","map":{"version":3,"names":["exports","module","require","log","formatArgs","save","load","useColors","storage","chrome","local","localstorage","colors","document","documentElement","style","window","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatters","j","v","JSON","stringify","err","message","args","arguments","namespace","humanize","diff","c","color","concat","Array","prototype","slice","call","index","lastC","replace","splice","Function","apply","namespaces","removeItem","debug","e","r","process","env","DEBUG","enable","localStorage"],"sources":["C:/Users/gorapalli raju/chat-app/client/node_modules/socket.io-client/node_modules/debug/browser.js"],"sourcesContent":["\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    return exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (typeof process !== 'undefined' && 'env' in process) {\n    return process.env.DEBUG;\n  }\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}