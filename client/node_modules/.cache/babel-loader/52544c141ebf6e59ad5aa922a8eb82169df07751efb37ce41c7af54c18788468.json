{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorapalli raju\\\\chat-app\\\\client\\\\src\\\\components\\\\chat\\\\chat.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useLocation } from 'react-router-dom'; // Import useLocation from react-router-dom\r\nfunction Chat(){\r\n  const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message,setMessage]=useState('');\r\n    const [messages,setMessages]=useState([]);\r\n  const location=useLocation();\r\n  useEffect(()=>{\r\n    const data = new URLSearchParams(location.search);\r\n    const name = data.get('name');\r\n    const room = data.get('room');\r\nconsole.log(name);\r\nconsole.log(room);\r\n//const socket=io('localhost:5000');\r\nconst socket = io('http://localhost:5000');\r\n  console.log(socket);\r\nsetName(name);\r\n    setRoom(room);\r\n    socket.emit('join',{ name,room });\r\n    \r\n    //socket.emit('join',{ name,room },({error})=>{\r\n    //alert(error);\r\n  //  });\r\n  \r\n   //this is the termination of first useeffect hook\r\n   return ()=>{\r\n    socket.emit('disconnect');//name same as that is present in backend.(see index.js in server folder)\r\n    socket.off();\r\n   }\r\n  },[location.search])\r\n  useEffect(()=>{\r\n    const socket = io('http://localhost:5000');\r\n    socket.on('message',(message)=>{\r\n      setMessages([...messages,message]);\r\n      console.log(message);\r\n    })\r\n  },[messages]);\r\n  const socket = io('http://localhost:5000');\r\n  const sendMessage=(event)=>{\r\n    event.preventDefault();//autometically refreshes the page\r\n    if(messages){\r\n      socket.emit('sendMessage',messages,()=>setMessage(''));\r\n    }\r\n  }\r\n  console.log(message,messages);\r\n return (\r\n  <div className=\"outerContainer\">\r\n  <div className=\"innerContainer\">\r\n  <input value={message}\r\n   onChange={(event)=>setMessage(event.target.value)}\r\n   onKeyPress={(event)=>event.key==='Enter'?sendMessage(event):null}\r\n   />\r\n  </div>\r\n  </div>\r\n );\r\n}\r\nexport default Chat;*/\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useLocation } from 'react-router-dom';\nimport './chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Move it outside the component\n\nfunction Chat() {\n  _s();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    const data = new URLSearchParams(location.search);\n    const name = data.get('name');\n    const room = data.get('room');\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        console.error(error);\n      }\n    });\n    return () => {\n      socket.disconnect(); // Use 'disconnect' to disconnect the socket\n    };\n  }, [location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      socket.off('message');\n    };\n  }, []);\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"infoBar\", {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"PcE1PjRVkv3Gi/aaRU9f0kkaC14=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","useLocation","InfoBar","jsxDEV","_jsxDEV","socket","Chat","_s","name","setName","room","setRoom","message","setMessage","messages","setMessages","location","data","URLSearchParams","search","get","emit","error","console","disconnect","on","prevMessages","off","sendMessage","event","preventDefault","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gorapalli raju/chat-app/client/src/components/chat/chat.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useLocation } from 'react-router-dom'; // Import useLocation from react-router-dom\r\nfunction Chat(){\r\n  const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message,setMessage]=useState('');\r\n    const [messages,setMessages]=useState([]);\r\n  const location=useLocation();\r\n  useEffect(()=>{\r\n    const data = new URLSearchParams(location.search);\r\n    const name = data.get('name');\r\n    const room = data.get('room');\r\nconsole.log(name);\r\nconsole.log(room);\r\n//const socket=io('localhost:5000');\r\nconst socket = io('http://localhost:5000');\r\n  console.log(socket);\r\nsetName(name);\r\n    setRoom(room);\r\n    socket.emit('join',{ name,room });\r\n    \r\n    //socket.emit('join',{ name,room },({error})=>{\r\n    //alert(error);\r\n  //  });\r\n  \r\n   //this is the termination of first useeffect hook\r\n   return ()=>{\r\n    socket.emit('disconnect');//name same as that is present in backend.(see index.js in server folder)\r\n    socket.off();\r\n   }\r\n  },[location.search])\r\n  useEffect(()=>{\r\n    const socket = io('http://localhost:5000');\r\n    socket.on('message',(message)=>{\r\n      setMessages([...messages,message]);\r\n      console.log(message);\r\n    })\r\n  },[messages]);\r\n  const socket = io('http://localhost:5000');\r\n  const sendMessage=(event)=>{\r\n    event.preventDefault();//autometically refreshes the page\r\n    if(messages){\r\n      socket.emit('sendMessage',messages,()=>setMessage(''));\r\n    }\r\n  }\r\n  console.log(message,messages);\r\n return (\r\n  <div className=\"outerContainer\">\r\n  <div className=\"innerContainer\">\r\n  <input value={message}\r\n   onChange={(event)=>setMessage(event.target.value)}\r\n   onKeyPress={(event)=>event.key==='Enter'?sendMessage(event):null}\r\n   />\r\n  </div>\r\n  </div>\r\n );\r\n}\r\nexport default Chat;*/\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './chat.css';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nconst socket = io('http://localhost:5000'); // Move it outside the component\r\n\r\nfunction Chat() {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const data = new URLSearchParams(location.search);\r\n    const name = data.get('name');\r\n    const room = data.get('room');\r\n    \r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n      if(error){\r\n        console.error(error);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect(); // Use 'disconnect' to disconnect the socket\r\n    };\r\n  }, [location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on('message', (message) => {\r\n      setMessages(prevMessages => [...prevMessages, message]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('message');\r\n    };\r\n  }, []); \r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if (message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  };\r\n\r\n  console.log(message, messages);\r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"innerContainer\">\r\n        <infoBar room={room}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}