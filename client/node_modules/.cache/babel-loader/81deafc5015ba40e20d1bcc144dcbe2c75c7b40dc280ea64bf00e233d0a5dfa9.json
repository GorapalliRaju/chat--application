{"ast":null,"code":"/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug.debug = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n  // define the `disabled` version\n  function disabled() {}\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    args[0] = exports.coerce(args[0]);\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting\n    args = exports.formatArgs.apply(self, args);\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n  fn.namespace = namespace;\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/[\\\\^$+?.()|[\\]{}]/g, '\\\\$&').replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","map":{"version":3,"names":["exports","module","debug","coerce","disable","enable","enabled","humanize","require","names","skips","formatters","prevColor","prevTime","selectColor","colors","length","namespace","disabled","self","curr","Date","ms","diff","prev","useColors","color","args","Array","arguments","i","concat","index","replace","match","format","formatter","val","call","splice","formatArgs","apply","logFn","log","console","bind","fn","namespaces","save","split","len","push","RegExp","substr","name","test","Error","stack","message"],"sources":["C:/Users/gorapalli raju/chat-app/client/node_modules/engine.io-client/node_modules/debug/debug.js"],"sourcesContent":["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug.debug = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting\n    args = exports.formatArgs.apply(self, args);\n\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/[\\\\^$+?.()|[\\]{}]/g, '\\\\$&').replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}