{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n  opts = opts || {};\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n  this.secure = null != opts.secure ? opts.secure : global.location && 'https:' === location.protocol;\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname || (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ? location.port : this.secure ? 443 : 80);\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n  this.open();\n}\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders,\n    forceNode: this.forceNode,\n    localAddress: this.localAddress\n  });\n  return transport;\n};\nfunction clone(obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport.on('drain', function () {\n    self.onDrain();\n  }).on('packet', function (packet) {\n    self.onPacket(packet);\n  }).on('error', function (e) {\n    self.onError(e);\n  }).on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, {\n    probe: 1\n  });\n  var failed = false;\n  var self = this;\n  Socket.priorWebsocketSuccess = false;\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{\n      type: 'ping',\n      data: 'probe'\n    }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n          cleanup();\n          self.setTransport(transport);\n          transport.send([{\n            type: 'upgrade'\n          }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n    cleanup();\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n    freezeTransport();\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n    self.emit('upgradeError', error);\n  }\n  function onTransportClose() {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose() {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n  options = options || {};\n  options.compress = false !== options.compress;\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n    var self = this;\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};","map":{"version":3,"names":["transports","require","Emitter","debug","index","parser","parseuri","parsejson","parseqs","module","exports","Socket","uri","opts","hostname","host","secure","protocol","port","query","global","location","agent","decode","upgrade","path","replace","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","readyState","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","undefined","forceNode","freeGlobal","extraHeaders","Object","keys","length","localAddress","id","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","open","priorWebsocketSuccess","prototype","Transport","createTransport","name","clone","EIO","transport","sid","socket","obj","o","i","hasOwnProperty","indexOf","self","setTimeout","emit","e","shift","setTransport","removeAllListeners","on","onDrain","packet","onPacket","onError","onClose","probe","failed","onTransportOpen","upgradeLosesBinary","supportsBinary","send","type","data","once","msg","upgrading","pause","cleanup","flush","err","Error","freezeTransport","close","onerror","error","onTransportClose","onclose","onupgrade","to","removeListener","onOpen","l","onHandshake","setPing","code","filterUpgrades","onHeartbeat","timeout","clearTimeout","ping","sendPacket","splice","writable","write","options","fn","compress","push","waitForUpgrade","cleanupAndClose","reason","desc","filteredUpgrades","j"],"sources":["C:/Users/gorapalli raju/chat-app/client/node_modules/engine.io-client/lib/socket.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders,\n    forceNode: this.forceNode,\n    localAddress: this.localAddress\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC9C,IAAIC,OAAO,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC1C,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC,CAAC,yBAAyB,CAAC;AACvD,IAAIG,KAAK,GAAGH,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAII,MAAM,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIK,QAAQ,GAAGL,OAAO,CAAC,UAAU,CAAC;AAClC,IAAIM,SAAS,GAAGN,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIO,OAAO,GAAGP,OAAO,CAAC,SAAS,CAAC;;AAEhC;AACA;AACA;;AAEAQ,MAAM,CAACC,OAAO,GAAGC,MAAM;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAMA,CAAEC,GAAG,EAAEC,IAAI,EAAE;EAC1B,IAAI,EAAE,IAAI,YAAYF,MAAM,CAAC,EAAE,OAAO,IAAIA,MAAM,CAACC,GAAG,EAAEC,IAAI,CAAC;EAE3DA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EAEjB,IAAID,GAAG,IAAI,QAAQ,KAAK,OAAOA,GAAG,EAAE;IAClCC,IAAI,GAAGD,GAAG;IACVA,GAAG,GAAG,IAAI;EACZ;EAEA,IAAIA,GAAG,EAAE;IACPA,GAAG,GAAGN,QAAQ,CAACM,GAAG,CAAC;IACnBC,IAAI,CAACC,QAAQ,GAAGF,GAAG,CAACG,IAAI;IACxBF,IAAI,CAACG,MAAM,GAAGJ,GAAG,CAACK,QAAQ,KAAK,OAAO,IAAIL,GAAG,CAACK,QAAQ,KAAK,KAAK;IAChEJ,IAAI,CAACK,IAAI,GAAGN,GAAG,CAACM,IAAI;IACpB,IAAIN,GAAG,CAACO,KAAK,EAAEN,IAAI,CAACM,KAAK,GAAGP,GAAG,CAACO,KAAK;EACvC,CAAC,MAAM,IAAIN,IAAI,CAACE,IAAI,EAAE;IACpBF,IAAI,CAACC,QAAQ,GAAGR,QAAQ,CAACO,IAAI,CAACE,IAAI,CAAC,CAACA,IAAI;EAC1C;EAEA,IAAI,CAACC,MAAM,GAAG,IAAI,IAAIH,IAAI,CAACG,MAAM,GAAGH,IAAI,CAACG,MAAM,GAC1CI,MAAM,CAACC,QAAQ,IAAI,QAAQ,KAAKA,QAAQ,CAACJ,QAAS;EAEvD,IAAIJ,IAAI,CAACC,QAAQ,IAAI,CAACD,IAAI,CAACK,IAAI,EAAE;IAC/B;IACAL,IAAI,CAACK,IAAI,GAAG,IAAI,CAACF,MAAM,GAAG,KAAK,GAAG,IAAI;EACxC;EAEA,IAAI,CAACM,KAAK,GAAGT,IAAI,CAACS,KAAK,IAAI,KAAK;EAChC,IAAI,CAACR,QAAQ,GAAGD,IAAI,CAACC,QAAQ,KAC1BM,MAAM,CAACC,QAAQ,GAAGA,QAAQ,CAACP,QAAQ,GAAG,WAAW,CAAC;EACrD,IAAI,CAACI,IAAI,GAAGL,IAAI,CAACK,IAAI,KAAKE,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACH,IAAI,GACpDG,QAAQ,CAACH,IAAI,GACZ,IAAI,CAACF,MAAM,GAAG,GAAG,GAAG,EAAG,CAAC;EAC/B,IAAI,CAACG,KAAK,GAAGN,IAAI,CAACM,KAAK,IAAI,CAAC,CAAC;EAC7B,IAAI,QAAQ,KAAK,OAAO,IAAI,CAACA,KAAK,EAAE,IAAI,CAACA,KAAK,GAAGX,OAAO,CAACe,MAAM,CAAC,IAAI,CAACJ,KAAK,CAAC;EAC3E,IAAI,CAACK,OAAO,GAAG,KAAK,KAAKX,IAAI,CAACW,OAAO;EACrC,IAAI,CAACC,IAAI,GAAG,CAACZ,IAAI,CAACY,IAAI,IAAI,YAAY,EAAEC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,GAAG;EAChE,IAAI,CAACC,UAAU,GAAG,CAAC,CAACd,IAAI,CAACc,UAAU;EACnC,IAAI,CAACC,KAAK,GAAG,KAAK,KAAKf,IAAI,CAACe,KAAK;EACjC,IAAI,CAACC,WAAW,GAAG,CAAC,CAAChB,IAAI,CAACgB,WAAW;EACrC,IAAI,CAACC,UAAU,GAAG,CAAC,CAACjB,IAAI,CAACiB,UAAU;EACnC,IAAI,CAACC,cAAc,GAAGlB,IAAI,CAACkB,cAAc,IAAI,GAAG;EAChD,IAAI,CAACC,iBAAiB,GAAGnB,IAAI,CAACmB,iBAAiB;EAC/C,IAAI,CAAChC,UAAU,GAAGa,IAAI,CAACb,UAAU,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC;EAC7D,IAAI,CAACiC,UAAU,GAAG,EAAE;EACpB,IAAI,CAACC,WAAW,GAAG,EAAE;EACrB,IAAI,CAACC,aAAa,GAAG,CAAC;EACtB,IAAI,CAACC,UAAU,GAAGvB,IAAI,CAACuB,UAAU,IAAI,GAAG;EACxC,IAAI,CAACC,eAAe,GAAGxB,IAAI,CAACwB,eAAe,IAAI,KAAK;EACpD,IAAI,CAACC,UAAU,GAAG,IAAI;EACtB,IAAI,CAACC,kBAAkB,GAAG1B,IAAI,CAAC0B,kBAAkB;EACjD,IAAI,CAACC,iBAAiB,GAAG,KAAK,KAAK3B,IAAI,CAAC2B,iBAAiB,GAAI3B,IAAI,CAAC2B,iBAAiB,IAAI,CAAC,CAAC,GAAI,KAAK;EAElG,IAAI,IAAI,KAAK,IAAI,CAACA,iBAAiB,EAAE,IAAI,CAACA,iBAAiB,GAAG,CAAC,CAAC;EAChE,IAAI,IAAI,CAACA,iBAAiB,IAAI,IAAI,IAAI,IAAI,CAACA,iBAAiB,CAACC,SAAS,EAAE;IACtE,IAAI,CAACD,iBAAiB,CAACC,SAAS,GAAG,IAAI;EACzC;;EAEA;EACA,IAAI,CAACC,GAAG,GAAG7B,IAAI,CAAC6B,GAAG,IAAI,IAAI;EAC3B,IAAI,CAACC,GAAG,GAAG9B,IAAI,CAAC8B,GAAG,IAAI,IAAI;EAC3B,IAAI,CAACC,UAAU,GAAG/B,IAAI,CAAC+B,UAAU,IAAI,IAAI;EACzC,IAAI,CAACC,IAAI,GAAGhC,IAAI,CAACgC,IAAI,IAAI,IAAI;EAC7B,IAAI,CAACC,EAAE,GAAGjC,IAAI,CAACiC,EAAE,IAAI,IAAI;EACzB,IAAI,CAACC,OAAO,GAAGlC,IAAI,CAACkC,OAAO,IAAI,IAAI;EACnC,IAAI,CAACC,kBAAkB,GAAGnC,IAAI,CAACmC,kBAAkB,KAAKC,SAAS,GAAG,IAAI,GAAGpC,IAAI,CAACmC,kBAAkB;EAChG,IAAI,CAACE,SAAS,GAAG,CAAC,CAACrC,IAAI,CAACqC,SAAS;;EAEjC;EACA,IAAIC,UAAU,GAAG,OAAO/B,MAAM,KAAK,QAAQ,IAAIA,MAAM;EACrD,IAAI+B,UAAU,CAAC/B,MAAM,KAAK+B,UAAU,EAAE;IACpC,IAAItC,IAAI,CAACuC,YAAY,IAAIC,MAAM,CAACC,IAAI,CAACzC,IAAI,CAACuC,YAAY,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;MAClE,IAAI,CAACH,YAAY,GAAGvC,IAAI,CAACuC,YAAY;IACvC;IAEA,IAAIvC,IAAI,CAAC2C,YAAY,EAAE;MACrB,IAAI,CAACA,YAAY,GAAG3C,IAAI,CAAC2C,YAAY;IACvC;EACF;;EAEA;EACA,IAAI,CAACC,EAAE,GAAG,IAAI;EACd,IAAI,CAACC,QAAQ,GAAG,IAAI;EACpB,IAAI,CAACC,YAAY,GAAG,IAAI;EACxB,IAAI,CAACC,WAAW,GAAG,IAAI;;EAEvB;EACA,IAAI,CAACC,iBAAiB,GAAG,IAAI;EAC7B,IAAI,CAACC,gBAAgB,GAAG,IAAI;EAE5B,IAAI,CAACC,IAAI,CAAC,CAAC;AACb;AAEApD,MAAM,CAACqD,qBAAqB,GAAG,KAAK;;AAEpC;AACA;AACA;;AAEA9D,OAAO,CAACS,MAAM,CAACsD,SAAS,CAAC;;AAEzB;AACA;AACA;AACA;AACA;;AAEAtD,MAAM,CAACM,QAAQ,GAAGZ,MAAM,CAACY,QAAQ,CAAC,CAAC;;AAEnC;AACA;AACA;AACA;;AAEAN,MAAM,CAACA,MAAM,GAAGA,MAAM;AACtBA,MAAM,CAACuD,SAAS,GAAGjE,OAAO,CAAC,aAAa,CAAC;AACzCU,MAAM,CAACX,UAAU,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjDU,MAAM,CAACN,MAAM,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAU,MAAM,CAACsD,SAAS,CAACE,eAAe,GAAG,UAAUC,IAAI,EAAE;EACjDjE,KAAK,CAAC,yBAAyB,EAAEiE,IAAI,CAAC;EACtC,IAAIjD,KAAK,GAAGkD,KAAK,CAAC,IAAI,CAAClD,KAAK,CAAC;;EAE7B;EACAA,KAAK,CAACmD,GAAG,GAAGjE,MAAM,CAACY,QAAQ;;EAE3B;EACAE,KAAK,CAACoD,SAAS,GAAGH,IAAI;;EAEtB;EACA,IAAI,IAAI,CAACX,EAAE,EAAEtC,KAAK,CAACqD,GAAG,GAAG,IAAI,CAACf,EAAE;EAEhC,IAAIc,SAAS,GAAG,IAAIvE,UAAU,CAACoE,IAAI,CAAC,CAAC;IACnC9C,KAAK,EAAE,IAAI,CAACA,KAAK;IACjBR,QAAQ,EAAE,IAAI,CAACA,QAAQ;IACvBI,IAAI,EAAE,IAAI,CAACA,IAAI;IACfF,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBS,IAAI,EAAE,IAAI,CAACA,IAAI;IACfN,KAAK,EAAEA,KAAK;IACZQ,UAAU,EAAE,IAAI,CAACA,UAAU;IAC3BC,KAAK,EAAE,IAAI,CAACA,KAAK;IACjBC,WAAW,EAAE,IAAI,CAACA,WAAW;IAC7BC,UAAU,EAAE,IAAI,CAACA,UAAU;IAC3BE,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;IACzCD,cAAc,EAAE,IAAI,CAACA,cAAc;IACnCK,UAAU,EAAE,IAAI,CAACA,UAAU;IAC3BqC,MAAM,EAAE,IAAI;IACZ/B,GAAG,EAAE,IAAI,CAACA,GAAG;IACbC,GAAG,EAAE,IAAI,CAACA,GAAG;IACbC,UAAU,EAAE,IAAI,CAACA,UAAU;IAC3BC,IAAI,EAAE,IAAI,CAACA,IAAI;IACfC,EAAE,EAAE,IAAI,CAACA,EAAE;IACXC,OAAO,EAAE,IAAI,CAACA,OAAO;IACrBC,kBAAkB,EAAE,IAAI,CAACA,kBAAkB;IAC3CR,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;IACzCY,YAAY,EAAE,IAAI,CAACA,YAAY;IAC/BF,SAAS,EAAE,IAAI,CAACA,SAAS;IACzBM,YAAY,EAAE,IAAI,CAACA;EACrB,CAAC,CAAC;EAEF,OAAOe,SAAS;AAClB,CAAC;AAED,SAASF,KAAKA,CAAEK,GAAG,EAAE;EACnB,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,KAAK,IAAIC,CAAC,IAAIF,GAAG,EAAE;IACjB,IAAIA,GAAG,CAACG,cAAc,CAACD,CAAC,CAAC,EAAE;MACzBD,CAAC,CAACC,CAAC,CAAC,GAAGF,GAAG,CAACE,CAAC,CAAC;IACf;EACF;EACA,OAAOD,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACAhE,MAAM,CAACsD,SAAS,CAACF,IAAI,GAAG,YAAY;EAClC,IAAIQ,SAAS;EACb,IAAI,IAAI,CAAClC,eAAe,IAAI1B,MAAM,CAACqD,qBAAqB,IAAI,IAAI,CAAChE,UAAU,CAAC8E,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;IACvGP,SAAS,GAAG,WAAW;EACzB,CAAC,MAAM,IAAI,CAAC,KAAK,IAAI,CAACvE,UAAU,CAACuD,MAAM,EAAE;IACvC;IACA,IAAIwB,IAAI,GAAG,IAAI;IACfC,UAAU,CAAC,YAAY;MACrBD,IAAI,CAACE,IAAI,CAAC,OAAO,EAAE,yBAAyB,CAAC;IAC/C,CAAC,EAAE,CAAC,CAAC;IACL;EACF,CAAC,MAAM;IACLV,SAAS,GAAG,IAAI,CAACvE,UAAU,CAAC,CAAC,CAAC;EAChC;EACA,IAAI,CAACiC,UAAU,GAAG,SAAS;;EAE3B;EACA,IAAI;IACFsC,SAAS,GAAG,IAAI,CAACJ,eAAe,CAACI,SAAS,CAAC;EAC7C,CAAC,CAAC,OAAOW,CAAC,EAAE;IACV,IAAI,CAAClF,UAAU,CAACmF,KAAK,CAAC,CAAC;IACvB,IAAI,CAACpB,IAAI,CAAC,CAAC;IACX;EACF;EAEAQ,SAAS,CAACR,IAAI,CAAC,CAAC;EAChB,IAAI,CAACqB,YAAY,CAACb,SAAS,CAAC;AAC9B,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA5D,MAAM,CAACsD,SAAS,CAACmB,YAAY,GAAG,UAAUb,SAAS,EAAE;EACnDpE,KAAK,CAAC,sBAAsB,EAAEoE,SAAS,CAACH,IAAI,CAAC;EAC7C,IAAIW,IAAI,GAAG,IAAI;EAEf,IAAI,IAAI,CAACR,SAAS,EAAE;IAClBpE,KAAK,CAAC,gCAAgC,EAAE,IAAI,CAACoE,SAAS,CAACH,IAAI,CAAC;IAC5D,IAAI,CAACG,SAAS,CAACc,kBAAkB,CAAC,CAAC;EACrC;;EAEA;EACA,IAAI,CAACd,SAAS,GAAGA,SAAS;;EAE1B;EACAA,SAAS,CACRe,EAAE,CAAC,OAAO,EAAE,YAAY;IACvBP,IAAI,CAACQ,OAAO,CAAC,CAAC;EAChB,CAAC,CAAC,CACDD,EAAE,CAAC,QAAQ,EAAE,UAAUE,MAAM,EAAE;IAC9BT,IAAI,CAACU,QAAQ,CAACD,MAAM,CAAC;EACvB,CAAC,CAAC,CACDF,EAAE,CAAC,OAAO,EAAE,UAAUJ,CAAC,EAAE;IACxBH,IAAI,CAACW,OAAO,CAACR,CAAC,CAAC;EACjB,CAAC,CAAC,CACDI,EAAE,CAAC,OAAO,EAAE,YAAY;IACvBP,IAAI,CAACY,OAAO,CAAC,iBAAiB,CAAC;EACjC,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAhF,MAAM,CAACsD,SAAS,CAAC2B,KAAK,GAAG,UAAUxB,IAAI,EAAE;EACvCjE,KAAK,CAAC,wBAAwB,EAAEiE,IAAI,CAAC;EACrC,IAAIG,SAAS,GAAG,IAAI,CAACJ,eAAe,CAACC,IAAI,EAAE;IAAEwB,KAAK,EAAE;EAAE,CAAC,CAAC;EACxD,IAAIC,MAAM,GAAG,KAAK;EAClB,IAAId,IAAI,GAAG,IAAI;EAEfpE,MAAM,CAACqD,qBAAqB,GAAG,KAAK;EAEpC,SAAS8B,eAAeA,CAAA,EAAI;IAC1B,IAAIf,IAAI,CAACxC,kBAAkB,EAAE;MAC3B,IAAIwD,kBAAkB,GAAG,CAAC,IAAI,CAACC,cAAc,IAAIjB,IAAI,CAACR,SAAS,CAACyB,cAAc;MAC9EH,MAAM,GAAGA,MAAM,IAAIE,kBAAkB;IACvC;IACA,IAAIF,MAAM,EAAE;IAEZ1F,KAAK,CAAC,6BAA6B,EAAEiE,IAAI,CAAC;IAC1CG,SAAS,CAAC0B,IAAI,CAAC,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC,CAAC;IACjD5B,SAAS,CAAC6B,IAAI,CAAC,QAAQ,EAAE,UAAUC,GAAG,EAAE;MACtC,IAAIR,MAAM,EAAE;MACZ,IAAI,MAAM,KAAKQ,GAAG,CAACH,IAAI,IAAI,OAAO,KAAKG,GAAG,CAACF,IAAI,EAAE;QAC/ChG,KAAK,CAAC,2BAA2B,EAAEiE,IAAI,CAAC;QACxCW,IAAI,CAACuB,SAAS,GAAG,IAAI;QACrBvB,IAAI,CAACE,IAAI,CAAC,WAAW,EAAEV,SAAS,CAAC;QACjC,IAAI,CAACA,SAAS,EAAE;QAChB5D,MAAM,CAACqD,qBAAqB,GAAG,WAAW,KAAKO,SAAS,CAACH,IAAI;QAE7DjE,KAAK,CAAC,gCAAgC,EAAE4E,IAAI,CAACR,SAAS,CAACH,IAAI,CAAC;QAC5DW,IAAI,CAACR,SAAS,CAACgC,KAAK,CAAC,YAAY;UAC/B,IAAIV,MAAM,EAAE;UACZ,IAAI,QAAQ,KAAKd,IAAI,CAAC9C,UAAU,EAAE;UAClC9B,KAAK,CAAC,+CAA+C,CAAC;UAEtDqG,OAAO,CAAC,CAAC;UAETzB,IAAI,CAACK,YAAY,CAACb,SAAS,CAAC;UAC5BA,SAAS,CAAC0B,IAAI,CAAC,CAAC;YAAEC,IAAI,EAAE;UAAU,CAAC,CAAC,CAAC;UACrCnB,IAAI,CAACE,IAAI,CAAC,SAAS,EAAEV,SAAS,CAAC;UAC/BA,SAAS,GAAG,IAAI;UAChBQ,IAAI,CAACuB,SAAS,GAAG,KAAK;UACtBvB,IAAI,CAAC0B,KAAK,CAAC,CAAC;QACd,CAAC,CAAC;MACJ,CAAC,MAAM;QACLtG,KAAK,CAAC,6BAA6B,EAAEiE,IAAI,CAAC;QAC1C,IAAIsC,GAAG,GAAG,IAAIC,KAAK,CAAC,aAAa,CAAC;QAClCD,GAAG,CAACnC,SAAS,GAAGA,SAAS,CAACH,IAAI;QAC9BW,IAAI,CAACE,IAAI,CAAC,cAAc,EAAEyB,GAAG,CAAC;MAChC;IACF,CAAC,CAAC;EACJ;EAEA,SAASE,eAAeA,CAAA,EAAI;IAC1B,IAAIf,MAAM,EAAE;;IAEZ;IACAA,MAAM,GAAG,IAAI;IAEbW,OAAO,CAAC,CAAC;IAETjC,SAAS,CAACsC,KAAK,CAAC,CAAC;IACjBtC,SAAS,GAAG,IAAI;EAClB;;EAEA;EACA,SAASuC,OAAOA,CAAEJ,GAAG,EAAE;IACrB,IAAIK,KAAK,GAAG,IAAIJ,KAAK,CAAC,eAAe,GAAGD,GAAG,CAAC;IAC5CK,KAAK,CAACxC,SAAS,GAAGA,SAAS,CAACH,IAAI;IAEhCwC,eAAe,CAAC,CAAC;IAEjBzG,KAAK,CAAC,kDAAkD,EAAEiE,IAAI,EAAEsC,GAAG,CAAC;IAEpE3B,IAAI,CAACE,IAAI,CAAC,cAAc,EAAE8B,KAAK,CAAC;EAClC;EAEA,SAASC,gBAAgBA,CAAA,EAAI;IAC3BF,OAAO,CAAC,kBAAkB,CAAC;EAC7B;;EAEA;EACA,SAASG,OAAOA,CAAA,EAAI;IAClBH,OAAO,CAAC,eAAe,CAAC;EAC1B;;EAEA;EACA,SAASI,SAASA,CAAEC,EAAE,EAAE;IACtB,IAAI5C,SAAS,IAAI4C,EAAE,CAAC/C,IAAI,KAAKG,SAAS,CAACH,IAAI,EAAE;MAC3CjE,KAAK,CAAC,4BAA4B,EAAEgH,EAAE,CAAC/C,IAAI,EAAEG,SAAS,CAACH,IAAI,CAAC;MAC5DwC,eAAe,CAAC,CAAC;IACnB;EACF;;EAEA;EACA,SAASJ,OAAOA,CAAA,EAAI;IAClBjC,SAAS,CAAC6C,cAAc,CAAC,MAAM,EAAEtB,eAAe,CAAC;IACjDvB,SAAS,CAAC6C,cAAc,CAAC,OAAO,EAAEN,OAAO,CAAC;IAC1CvC,SAAS,CAAC6C,cAAc,CAAC,OAAO,EAAEJ,gBAAgB,CAAC;IACnDjC,IAAI,CAACqC,cAAc,CAAC,OAAO,EAAEH,OAAO,CAAC;IACrClC,IAAI,CAACqC,cAAc,CAAC,WAAW,EAAEF,SAAS,CAAC;EAC7C;EAEA3C,SAAS,CAAC6B,IAAI,CAAC,MAAM,EAAEN,eAAe,CAAC;EACvCvB,SAAS,CAAC6B,IAAI,CAAC,OAAO,EAAEU,OAAO,CAAC;EAChCvC,SAAS,CAAC6B,IAAI,CAAC,OAAO,EAAEY,gBAAgB,CAAC;EAEzC,IAAI,CAACZ,IAAI,CAAC,OAAO,EAAEa,OAAO,CAAC;EAC3B,IAAI,CAACb,IAAI,CAAC,WAAW,EAAEc,SAAS,CAAC;EAEjC3C,SAAS,CAACR,IAAI,CAAC,CAAC;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEApD,MAAM,CAACsD,SAAS,CAACoD,MAAM,GAAG,YAAY;EACpClH,KAAK,CAAC,aAAa,CAAC;EACpB,IAAI,CAAC8B,UAAU,GAAG,MAAM;EACxBtB,MAAM,CAACqD,qBAAqB,GAAG,WAAW,KAAK,IAAI,CAACO,SAAS,CAACH,IAAI;EAClE,IAAI,CAACa,IAAI,CAAC,MAAM,CAAC;EACjB,IAAI,CAACwB,KAAK,CAAC,CAAC;;EAEZ;EACA;EACA,IAAI,MAAM,KAAK,IAAI,CAACxE,UAAU,IAAI,IAAI,CAACT,OAAO,IAAI,IAAI,CAAC+C,SAAS,CAACgC,KAAK,EAAE;IACtEpG,KAAK,CAAC,yBAAyB,CAAC;IAChC,KAAK,IAAIyE,CAAC,GAAG,CAAC,EAAE0C,CAAC,GAAG,IAAI,CAAC5D,QAAQ,CAACH,MAAM,EAAEqB,CAAC,GAAG0C,CAAC,EAAE1C,CAAC,EAAE,EAAE;MACpD,IAAI,CAACgB,KAAK,CAAC,IAAI,CAAClC,QAAQ,CAACkB,CAAC,CAAC,CAAC;IAC9B;EACF;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEAjE,MAAM,CAACsD,SAAS,CAACwB,QAAQ,GAAG,UAAUD,MAAM,EAAE;EAC5C,IAAI,SAAS,KAAK,IAAI,CAACvD,UAAU,IAAI,MAAM,KAAK,IAAI,CAACA,UAAU,IAC3D,SAAS,KAAK,IAAI,CAACA,UAAU,EAAE;IACjC9B,KAAK,CAAC,sCAAsC,EAAEqF,MAAM,CAACU,IAAI,EAAEV,MAAM,CAACW,IAAI,CAAC;IAEvE,IAAI,CAAClB,IAAI,CAAC,QAAQ,EAAEO,MAAM,CAAC;;IAE3B;IACA,IAAI,CAACP,IAAI,CAAC,WAAW,CAAC;IAEtB,QAAQO,MAAM,CAACU,IAAI;MACjB,KAAK,MAAM;QACT,IAAI,CAACqB,WAAW,CAAChH,SAAS,CAACiF,MAAM,CAACW,IAAI,CAAC,CAAC;QACxC;MAEF,KAAK,MAAM;QACT,IAAI,CAACqB,OAAO,CAAC,CAAC;QACd,IAAI,CAACvC,IAAI,CAAC,MAAM,CAAC;QACjB;MAEF,KAAK,OAAO;QACV,IAAIyB,GAAG,GAAG,IAAIC,KAAK,CAAC,cAAc,CAAC;QACnCD,GAAG,CAACe,IAAI,GAAGjC,MAAM,CAACW,IAAI;QACtB,IAAI,CAACT,OAAO,CAACgB,GAAG,CAAC;QACjB;MAEF,KAAK,SAAS;QACZ,IAAI,CAACzB,IAAI,CAAC,MAAM,EAAEO,MAAM,CAACW,IAAI,CAAC;QAC9B,IAAI,CAAClB,IAAI,CAAC,SAAS,EAAEO,MAAM,CAACW,IAAI,CAAC;QACjC;IACJ;EACF,CAAC,MAAM;IACLhG,KAAK,CAAC,6CAA6C,EAAE,IAAI,CAAC8B,UAAU,CAAC;EACvE;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAtB,MAAM,CAACsD,SAAS,CAACsD,WAAW,GAAG,UAAUpB,IAAI,EAAE;EAC7C,IAAI,CAAClB,IAAI,CAAC,WAAW,EAAEkB,IAAI,CAAC;EAC5B,IAAI,CAAC1C,EAAE,GAAG0C,IAAI,CAAC3B,GAAG;EAClB,IAAI,CAACD,SAAS,CAACpD,KAAK,CAACqD,GAAG,GAAG2B,IAAI,CAAC3B,GAAG;EACnC,IAAI,CAACd,QAAQ,GAAG,IAAI,CAACgE,cAAc,CAACvB,IAAI,CAACzC,QAAQ,CAAC;EAClD,IAAI,CAACC,YAAY,GAAGwC,IAAI,CAACxC,YAAY;EACrC,IAAI,CAACC,WAAW,GAAGuC,IAAI,CAACvC,WAAW;EACnC,IAAI,CAACyD,MAAM,CAAC,CAAC;EACb;EACA,IAAI,QAAQ,KAAK,IAAI,CAACpF,UAAU,EAAE;EAClC,IAAI,CAACuF,OAAO,CAAC,CAAC;;EAEd;EACA,IAAI,CAACJ,cAAc,CAAC,WAAW,EAAE,IAAI,CAACO,WAAW,CAAC;EAClD,IAAI,CAACrC,EAAE,CAAC,WAAW,EAAE,IAAI,CAACqC,WAAW,CAAC;AACxC,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEAhH,MAAM,CAACsD,SAAS,CAAC0D,WAAW,GAAG,UAAUC,OAAO,EAAE;EAChDC,YAAY,CAAC,IAAI,CAAC/D,gBAAgB,CAAC;EACnC,IAAIiB,IAAI,GAAG,IAAI;EACfA,IAAI,CAACjB,gBAAgB,GAAGkB,UAAU,CAAC,YAAY;IAC7C,IAAI,QAAQ,KAAKD,IAAI,CAAC9C,UAAU,EAAE;IAClC8C,IAAI,CAACY,OAAO,CAAC,cAAc,CAAC;EAC9B,CAAC,EAAEiC,OAAO,IAAK7C,IAAI,CAACpB,YAAY,GAAGoB,IAAI,CAACnB,WAAY,CAAC;AACvD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAjD,MAAM,CAACsD,SAAS,CAACuD,OAAO,GAAG,YAAY;EACrC,IAAIzC,IAAI,GAAG,IAAI;EACf8C,YAAY,CAAC9C,IAAI,CAAClB,iBAAiB,CAAC;EACpCkB,IAAI,CAAClB,iBAAiB,GAAGmB,UAAU,CAAC,YAAY;IAC9C7E,KAAK,CAAC,kDAAkD,EAAE4E,IAAI,CAACnB,WAAW,CAAC;IAC3EmB,IAAI,CAAC+C,IAAI,CAAC,CAAC;IACX/C,IAAI,CAAC4C,WAAW,CAAC5C,IAAI,CAACnB,WAAW,CAAC;EACpC,CAAC,EAAEmB,IAAI,CAACpB,YAAY,CAAC;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEAhD,MAAM,CAACsD,SAAS,CAAC6D,IAAI,GAAG,YAAY;EAClC,IAAI/C,IAAI,GAAG,IAAI;EACf,IAAI,CAACgD,UAAU,CAAC,MAAM,EAAE,YAAY;IAClChD,IAAI,CAACE,IAAI,CAAC,MAAM,CAAC;EACnB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEAtE,MAAM,CAACsD,SAAS,CAACsB,OAAO,GAAG,YAAY;EACrC,IAAI,CAACrD,WAAW,CAAC8F,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC7F,aAAa,CAAC;;EAE9C;EACA;EACA;EACA,IAAI,CAACA,aAAa,GAAG,CAAC;EAEtB,IAAI,CAAC,KAAK,IAAI,CAACD,WAAW,CAACqB,MAAM,EAAE;IACjC,IAAI,CAAC0B,IAAI,CAAC,OAAO,CAAC;EACpB,CAAC,MAAM;IACL,IAAI,CAACwB,KAAK,CAAC,CAAC;EACd;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA9F,MAAM,CAACsD,SAAS,CAACwC,KAAK,GAAG,YAAY;EACnC,IAAI,QAAQ,KAAK,IAAI,CAACxE,UAAU,IAAI,IAAI,CAACsC,SAAS,CAAC0D,QAAQ,IACzD,CAAC,IAAI,CAAC3B,SAAS,IAAI,IAAI,CAACpE,WAAW,CAACqB,MAAM,EAAE;IAC5CpD,KAAK,CAAC,+BAA+B,EAAE,IAAI,CAAC+B,WAAW,CAACqB,MAAM,CAAC;IAC/D,IAAI,CAACgB,SAAS,CAAC0B,IAAI,CAAC,IAAI,CAAC/D,WAAW,CAAC;IACrC;IACA;IACA,IAAI,CAACC,aAAa,GAAG,IAAI,CAACD,WAAW,CAACqB,MAAM;IAC5C,IAAI,CAAC0B,IAAI,CAAC,OAAO,CAAC;EACpB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAtE,MAAM,CAACsD,SAAS,CAACiE,KAAK,GACtBvH,MAAM,CAACsD,SAAS,CAACgC,IAAI,GAAG,UAAUI,GAAG,EAAE8B,OAAO,EAAEC,EAAE,EAAE;EAClD,IAAI,CAACL,UAAU,CAAC,SAAS,EAAE1B,GAAG,EAAE8B,OAAO,EAAEC,EAAE,CAAC;EAC5C,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAzH,MAAM,CAACsD,SAAS,CAAC8D,UAAU,GAAG,UAAU7B,IAAI,EAAEC,IAAI,EAAEgC,OAAO,EAAEC,EAAE,EAAE;EAC/D,IAAI,UAAU,KAAK,OAAOjC,IAAI,EAAE;IAC9BiC,EAAE,GAAGjC,IAAI;IACTA,IAAI,GAAGlD,SAAS;EAClB;EAEA,IAAI,UAAU,KAAK,OAAOkF,OAAO,EAAE;IACjCC,EAAE,GAAGD,OAAO;IACZA,OAAO,GAAG,IAAI;EAChB;EAEA,IAAI,SAAS,KAAK,IAAI,CAAClG,UAAU,IAAI,QAAQ,KAAK,IAAI,CAACA,UAAU,EAAE;IACjE;EACF;EAEAkG,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvBA,OAAO,CAACE,QAAQ,GAAG,KAAK,KAAKF,OAAO,CAACE,QAAQ;EAE7C,IAAI7C,MAAM,GAAG;IACXU,IAAI,EAAEA,IAAI;IACVC,IAAI,EAAEA,IAAI;IACVgC,OAAO,EAAEA;EACX,CAAC;EACD,IAAI,CAAClD,IAAI,CAAC,cAAc,EAAEO,MAAM,CAAC;EACjC,IAAI,CAACtD,WAAW,CAACoG,IAAI,CAAC9C,MAAM,CAAC;EAC7B,IAAI4C,EAAE,EAAE,IAAI,CAAChC,IAAI,CAAC,OAAO,EAAEgC,EAAE,CAAC;EAC9B,IAAI,CAAC3B,KAAK,CAAC,CAAC;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA9F,MAAM,CAACsD,SAAS,CAAC4C,KAAK,GAAG,YAAY;EACnC,IAAI,SAAS,KAAK,IAAI,CAAC5E,UAAU,IAAI,MAAM,KAAK,IAAI,CAACA,UAAU,EAAE;IAC/D,IAAI,CAACA,UAAU,GAAG,SAAS;IAE3B,IAAI8C,IAAI,GAAG,IAAI;IAEf,IAAI,IAAI,CAAC7C,WAAW,CAACqB,MAAM,EAAE;MAC3B,IAAI,CAAC6C,IAAI,CAAC,OAAO,EAAE,YAAY;QAC7B,IAAI,IAAI,CAACE,SAAS,EAAE;UAClBiC,cAAc,CAAC,CAAC;QAClB,CAAC,MAAM;UACL1B,KAAK,CAAC,CAAC;QACT;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,IAAI,CAACP,SAAS,EAAE;MACzBiC,cAAc,CAAC,CAAC;IAClB,CAAC,MAAM;MACL1B,KAAK,CAAC,CAAC;IACT;EACF;EAEA,SAASA,KAAKA,CAAA,EAAI;IAChB9B,IAAI,CAACY,OAAO,CAAC,cAAc,CAAC;IAC5BxF,KAAK,CAAC,6CAA6C,CAAC;IACpD4E,IAAI,CAACR,SAAS,CAACsC,KAAK,CAAC,CAAC;EACxB;EAEA,SAAS2B,eAAeA,CAAA,EAAI;IAC1BzD,IAAI,CAACqC,cAAc,CAAC,SAAS,EAAEoB,eAAe,CAAC;IAC/CzD,IAAI,CAACqC,cAAc,CAAC,cAAc,EAAEoB,eAAe,CAAC;IACpD3B,KAAK,CAAC,CAAC;EACT;EAEA,SAAS0B,cAAcA,CAAA,EAAI;IACzB;IACAxD,IAAI,CAACqB,IAAI,CAAC,SAAS,EAAEoC,eAAe,CAAC;IACrCzD,IAAI,CAACqB,IAAI,CAAC,cAAc,EAAEoC,eAAe,CAAC;EAC5C;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA7H,MAAM,CAACsD,SAAS,CAACyB,OAAO,GAAG,UAAUgB,GAAG,EAAE;EACxCvG,KAAK,CAAC,iBAAiB,EAAEuG,GAAG,CAAC;EAC7B/F,MAAM,CAACqD,qBAAqB,GAAG,KAAK;EACpC,IAAI,CAACiB,IAAI,CAAC,OAAO,EAAEyB,GAAG,CAAC;EACvB,IAAI,CAACf,OAAO,CAAC,iBAAiB,EAAEe,GAAG,CAAC;AACtC,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA/F,MAAM,CAACsD,SAAS,CAAC0B,OAAO,GAAG,UAAU8C,MAAM,EAAEC,IAAI,EAAE;EACjD,IAAI,SAAS,KAAK,IAAI,CAACzG,UAAU,IAAI,MAAM,KAAK,IAAI,CAACA,UAAU,IAAI,SAAS,KAAK,IAAI,CAACA,UAAU,EAAE;IAChG9B,KAAK,CAAC,gCAAgC,EAAEsI,MAAM,CAAC;IAC/C,IAAI1D,IAAI,GAAG,IAAI;;IAEf;IACA8C,YAAY,CAAC,IAAI,CAAChE,iBAAiB,CAAC;IACpCgE,YAAY,CAAC,IAAI,CAAC/D,gBAAgB,CAAC;;IAEnC;IACA,IAAI,CAACS,SAAS,CAACc,kBAAkB,CAAC,OAAO,CAAC;;IAE1C;IACA,IAAI,CAACd,SAAS,CAACsC,KAAK,CAAC,CAAC;;IAEtB;IACA,IAAI,CAACtC,SAAS,CAACc,kBAAkB,CAAC,CAAC;;IAEnC;IACA,IAAI,CAACpD,UAAU,GAAG,QAAQ;;IAE1B;IACA,IAAI,CAACwB,EAAE,GAAG,IAAI;;IAEd;IACA,IAAI,CAACwB,IAAI,CAAC,OAAO,EAAEwD,MAAM,EAAEC,IAAI,CAAC;;IAEhC;IACA;IACA3D,IAAI,CAAC7C,WAAW,GAAG,EAAE;IACrB6C,IAAI,CAAC5C,aAAa,GAAG,CAAC;EACxB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAxB,MAAM,CAACsD,SAAS,CAACyD,cAAc,GAAG,UAAUhE,QAAQ,EAAE;EACpD,IAAIiF,gBAAgB,GAAG,EAAE;EACzB,KAAK,IAAI/D,CAAC,GAAG,CAAC,EAAEgE,CAAC,GAAGlF,QAAQ,CAACH,MAAM,EAAEqB,CAAC,GAAGgE,CAAC,EAAEhE,CAAC,EAAE,EAAE;IAC/C,IAAI,CAACxE,KAAK,CAAC,IAAI,CAACJ,UAAU,EAAE0D,QAAQ,CAACkB,CAAC,CAAC,CAAC,EAAE+D,gBAAgB,CAACL,IAAI,CAAC5E,QAAQ,CAACkB,CAAC,CAAC,CAAC;EAC9E;EACA,OAAO+D,gBAAgB;AACzB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}