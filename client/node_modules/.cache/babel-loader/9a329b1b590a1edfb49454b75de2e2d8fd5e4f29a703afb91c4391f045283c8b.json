{"ast":null,"code":"var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n  options.name        - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || targetProperty && targetProperty.sham) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};","map":{"version":3,"names":["global","require","getOwnPropertyDescriptor","f","createNonEnumerableProperty","redefine","setGlobal","copyConstructorProperties","isForced","module","exports","options","source","TARGET","target","GLOBAL","STATIC","stat","FORCED","key","targetProperty","sourceProperty","descriptor","prototype","noTargetGet","value","forced","undefined","sham"],"sources":["C:/Users/gorapalli raju/chat-app/client/node_modules/react-scroll-to-bottom/node_modules/core-js/internals/export.js"],"sourcesContent":["var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n  options.name        - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC3C,IAAIC,wBAAwB,GAAGD,OAAO,CAAC,iDAAiD,CAAC,CAACE,CAAC;AAC3F,IAAIC,2BAA2B,GAAGH,OAAO,CAAC,6CAA6C,CAAC;AACxF,IAAII,QAAQ,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AAC/C,IAAIK,SAAS,GAAGL,OAAO,CAAC,yBAAyB,CAAC;AAClD,IAAIM,yBAAyB,GAAGN,OAAO,CAAC,0CAA0C,CAAC;AACnF,IAAIO,QAAQ,GAAGP,OAAO,CAAC,wBAAwB,CAAC;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAQ,MAAM,CAACC,OAAO,GAAG,UAAUC,OAAO,EAAEC,MAAM,EAAE;EAC1C,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAM;EAC3B,IAAIC,MAAM,GAAGJ,OAAO,CAACX,MAAM;EAC3B,IAAIgB,MAAM,GAAGL,OAAO,CAACM,IAAI;EACzB,IAAIC,MAAM,EAAEJ,MAAM,EAAEK,GAAG,EAAEC,cAAc,EAAEC,cAAc,EAAEC,UAAU;EACnE,IAAIP,MAAM,EAAE;IACVD,MAAM,GAAGd,MAAM;EACjB,CAAC,MAAM,IAAIgB,MAAM,EAAE;IACjBF,MAAM,GAAGd,MAAM,CAACa,MAAM,CAAC,IAAIP,SAAS,CAACO,MAAM,EAAE,CAAC,CAAC,CAAC;EAClD,CAAC,MAAM;IACLC,MAAM,GAAG,CAACd,MAAM,CAACa,MAAM,CAAC,IAAI,CAAC,CAAC,EAAEU,SAAS;EAC3C;EACA,IAAIT,MAAM,EAAE,KAAKK,GAAG,IAAIP,MAAM,EAAE;IAC9BS,cAAc,GAAGT,MAAM,CAACO,GAAG,CAAC;IAC5B,IAAIR,OAAO,CAACa,WAAW,EAAE;MACvBF,UAAU,GAAGpB,wBAAwB,CAACY,MAAM,EAAEK,GAAG,CAAC;MAClDC,cAAc,GAAGE,UAAU,IAAIA,UAAU,CAACG,KAAK;IACjD,CAAC,MAAML,cAAc,GAAGN,MAAM,CAACK,GAAG,CAAC;IACnCD,MAAM,GAAGV,QAAQ,CAACO,MAAM,GAAGI,GAAG,GAAGN,MAAM,IAAIG,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,GAAGG,GAAG,EAAER,OAAO,CAACe,MAAM,CAAC;IACrF;IACA,IAAI,CAACR,MAAM,IAAIE,cAAc,KAAKO,SAAS,EAAE;MAC3C,IAAI,OAAON,cAAc,KAAK,OAAOD,cAAc,EAAE;MACrDb,yBAAyB,CAACc,cAAc,EAAED,cAAc,CAAC;IAC3D;IACA;IACA,IAAIT,OAAO,CAACiB,IAAI,IAAKR,cAAc,IAAIA,cAAc,CAACQ,IAAK,EAAE;MAC3DxB,2BAA2B,CAACiB,cAAc,EAAE,MAAM,EAAE,IAAI,CAAC;IAC3D;IACA;IACAhB,QAAQ,CAACS,MAAM,EAAEK,GAAG,EAAEE,cAAc,EAAEV,OAAO,CAAC;EAChD;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}