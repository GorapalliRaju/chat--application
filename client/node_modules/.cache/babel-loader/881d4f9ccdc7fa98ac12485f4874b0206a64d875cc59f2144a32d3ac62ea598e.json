{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorapalli raju\\\\chat-app\\\\client\\\\src\\\\components\\\\chat\\\\chat.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useLocation } from 'react-router-dom'; // Import useLocation from react-router-dom\r\n//const socket=null;\r\nfunction Chat() {\r\n    const [name,setName]=useState('');\r\n    const [room,setRoom]=useState('');\r\n  const location = useLocation(); // Use useLocation hook to access the location object\r\n  //const ENDPOINT='http://localhost:5000';\r\n  useEffect(() => {\r\n    const data = new URLSearchParams(location.search);\r\n    const name = data.get('name');\r\n    const room = data.get('room');\r\n   const socket=io('http://localhost:5000');\r\n   console.log(name,room);\r\n    setName(name);\r\n    setRoom(room);\r\n    console.log(socket);\r\n  }, [location.search]);\r\n\r\n  return <h1>hello world</h1>;\r\n}\r\n\r\nexport default Chat;*/\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const location = useLocation();\n  const socket = io(\"http://localhost:5000\"); // Connect to the same host that served the page\n\n  useEffect(() => {\n    const data = new URLSearchParams(location.search);\n    const name = data.get('name');\n    const room = data.get('room');\n    setName(name);\n    setRoom(room);\n    console.log(socket);\n\n    // Cleanup the socket connection when component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, [location.search, socket]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"hello world\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n}\n_s(Chat, \"HhovDh1BXfUsWYNptUL8TDXUP94=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","useLocation","jsxDEV","_jsxDEV","Chat","_s","name","setName","room","setRoom","location","socket","data","URLSearchParams","search","get","console","log","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gorapalli raju/chat-app/client/src/components/chat/chat.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useLocation } from 'react-router-dom'; // Import useLocation from react-router-dom\r\n//const socket=null;\r\nfunction Chat() {\r\n    const [name,setName]=useState('');\r\n    const [room,setRoom]=useState('');\r\n  const location = useLocation(); // Use useLocation hook to access the location object\r\n  //const ENDPOINT='http://localhost:5000';\r\n  useEffect(() => {\r\n    const data = new URLSearchParams(location.search);\r\n    const name = data.get('name');\r\n    const room = data.get('room');\r\n   const socket=io('http://localhost:5000');\r\n   console.log(name,room);\r\n    setName(name);\r\n    setRoom(room);\r\n    console.log(socket);\r\n  }, [location.search]);\r\n\r\n  return <h1>hello world</h1>;\r\n}\r\n\r\nexport default Chat;*/\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction Chat() {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const location = useLocation();\r\n    const socket = io(\"http://localhost:5000\"); // Connect to the same host that served the page\r\n\r\n    useEffect(() => {\r\n        const data = new URLSearchParams(location.search);\r\n        const name = data.get('name');\r\n        const room = data.get('room');\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        console.log(socket);\r\n\r\n        // Cleanup the socket connection when component unmounts\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [location.search, socket]);\r\n\r\n    return <h1>hello world</h1>;\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,MAAM,GAAGX,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMa,IAAI,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;IACjD,MAAMR,IAAI,GAAGM,IAAI,CAACG,GAAG,CAAC,MAAM,CAAC;IAC7B,MAAMP,IAAI,GAAGI,IAAI,CAACG,GAAG,CAAC,MAAM,CAAC;IAE7BR,OAAO,CAACD,IAAI,CAAC;IACbG,OAAO,CAACD,IAAI,CAAC;IAEbQ,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;;IAEnB;IACA,OAAO,MAAM;MACTA,MAAM,CAACO,UAAU,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,CAACR,QAAQ,CAACI,MAAM,EAAEH,MAAM,CAAC,CAAC;EAE7B,oBAAOR,OAAA;IAAAgB,QAAA,EAAI;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC/B;AAAClB,EAAA,CAvBQD,IAAI;EAAA,QAGQH,WAAW;AAAA;AAAAuB,EAAA,GAHvBpB,IAAI;AAyBb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}