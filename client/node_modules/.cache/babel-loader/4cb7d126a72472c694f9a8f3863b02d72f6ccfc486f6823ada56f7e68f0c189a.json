{"ast":null,"code":"'use strict';\n\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar fails = require('../internals/fails');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getMethod = require('../internals/get-method');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar REPLACE = wellKnownSymbol('replace');\nvar max = Math.max;\nvar min = Math.min;\nvar maybeToString = function maybeToString(it) {\n  return it === undefined ? it : String(it);\n};\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n}();\n\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n}();\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = {\n      a: '7'\n    };\n    return result;\n  };\n  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n  return [\n  // `String.prototype.replace` method\n  // https://tc39.es/ecma262/#sec-string.prototype.replace\n  function replace(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\n    return replacer ? replacer.call(searchValue, O, replaceValue) : nativeReplace.call(toString(O), searchValue, replaceValue);\n  },\n  // `RegExp.prototype[@@replace]` method\n  // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n  function (string, replaceValue) {\n    var rx = anObject(this);\n    var S = toString(string);\n    if (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1 && replaceValue.indexOf('$<') === -1) {\n      var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n      if (res.done) return res.value;\n    }\n    var functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    var global = rx.global;\n    if (global) {\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n    }\n    var results = [];\n    while (true) {\n      var result = regExpExec(rx, S);\n      if (result === null) break;\n      results.push(result);\n      if (!global) break;\n      var matchStr = toString(result[0]);\n      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n    }\n    var accumulatedResult = '';\n    var nextSourcePosition = 0;\n    for (var i = 0; i < results.length; i++) {\n      result = results[i];\n      var matched = toString(result[0]);\n      var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n      var captures = [];\n      // NOTE: This is equivalent to\n      //   captures = result.slice(1).map(maybeToString)\n      // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n      // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n      // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n      for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n      var namedCaptures = result.groups;\n      if (functionalReplace) {\n        var replacerArgs = [matched].concat(captures, position, S);\n        if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n        var replacement = toString(replaceValue.apply(undefined, replacerArgs));\n      } else {\n        replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n      }\n      if (position >= nextSourcePosition) {\n        accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n        nextSourcePosition = position + matched.length;\n      }\n    }\n    return accumulatedResult + S.slice(nextSourcePosition);\n  }];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);","map":{"version":3,"names":["fixRegExpWellKnownSymbolLogic","require","fails","anObject","isCallable","toIntegerOrInfinity","toLength","toString","requireObjectCoercible","advanceStringIndex","getMethod","getSubstitution","regExpExec","wellKnownSymbol","REPLACE","max","Math","min","maybeToString","it","undefined","String","REPLACE_KEEPS_$0","replace","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_SUPPORTS_NAMED_GROUPS","re","exec","result","groups","a","_","nativeReplace","maybeCallNative","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","call","string","rx","S","indexOf","res","done","value","functionalReplace","global","fullUnicode","unicode","lastIndex","results","push","matchStr","accumulatedResult","nextSourcePosition","i","length","matched","position","index","captures","j","namedCaptures","replacerArgs","concat","replacement","apply","slice"],"sources":["C:/Users/gorapalli raju/chat-app/client/node_modules/react-scroll-to-bottom/node_modules/core-js/modules/es.string.replace.js"],"sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar fails = require('../internals/fails');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getMethod = require('../internals/get-method');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar max = Math.max;\nvar min = Math.min;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\n      return replacer\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(toString(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (string, replaceValue) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (\n        typeof replaceValue === 'string' &&\n        replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1 &&\n        replaceValue.indexOf('$<') === -1\n      ) {\n        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var functionalReplace = isCallable(replaceValue);\n      if (!functionalReplace) replaceValue = toString(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = toString(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = toString(result[0]);\n        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = toString(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}